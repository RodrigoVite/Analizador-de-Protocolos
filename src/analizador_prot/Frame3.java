package analizador_prot;

import java.io.IOException;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.Date;
import org.jnetpcap.Pcap;
import org.jnetpcap.PcapIf;
import org.jnetpcap.PcapAddr;
import org.jnetpcap.PcapSockAddr;
import org.jnetpcap.PcapBpfProgram;
import org.jnetpcap.PcapDumper;
import org.jnetpcap.PcapHandler;
import org.jnetpcap.packet.PcapPacket;
import org.jnetpcap.packet.PcapPacketHandler;
import org.jnetpcap.protocol.network.Arp;
import org.jnetpcap.protocol.network.Icmp;
import org.jnetpcap.protocol.network.Ip4;
import org.jnetpcap.protocol.tcpip.Tcp;
import org.jnetpcap.protocol.tcpip.Udp;

/**
 * @author Rodrigo-Laptop
 */

public class Frame3 extends javax.swing.JFrame {
    /**
     * Creates new form Frame3
     */
    private static String asString(final byte[] mac) {
        final StringBuilder buf = new StringBuilder();
        for (byte b : mac) {
          if (buf.length() != 0) {
            buf.append(':');
          }
          if (b >= 0 && b < 16) {
            buf.append('0');
          }
          buf.append(Integer.toHexString((b < 0) ? b + 256 : b).toUpperCase());
        }
        return buf.toString();
    }
    
    public static String filtro;
    public static int dispositivo;
    public static int CIEEE=0,CIP=0,CPUDP=0, CPTCP=0,CARP=0,CPICMP=0;
    int trama=20;
    public Frame3() {
        initComponents();
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        jButton5.setVisible(false);
        btnEst.setVisible(false);
        jTextArea1.setEnabled(false);
        jTextArea2.setVisible(false);
        jTextArea2.setEnabled(false);
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    jTextArea1.append(err); 
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }
            jTextArea1.append("Network devices found:");
            jTextArea1.append(System.getProperty("line.separator"));
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
                jTextArea1.append(" #"+num+": "+device.getName()+" ["+description+"] MAC:["+dir_mac+"]");
                jTextArea1.append(System.getProperty("line.separator"));
            }//for
            jTextArea1.append(" Elije el dispositivo de captura: ");
            jTextArea1.append(System.getProperty("line.separator"));
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setVisible(true);
            jButton4.setVisible(true);
            jButton5.setVisible(true);
            
        }catch(IOException e){e.printStackTrace();}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnEst = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnSVolver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        btnEportar.setText("Guardar PCAP");
        btnEportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEportarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 770, 210));

        jLabel1.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 51));
        jLabel1.setText("Al Hilo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jButton1.setText("0");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, -1, -1));

        jButton2.setText("1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, -1, -1));

        jButton3.setText("2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, -1, -1));

        jButton4.setText("3");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, -1, -1));

        jButton5.setText("4");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, -1, -1));

        btnEst.setText("Generar Estadisticas");
        btnEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstActionPerformed(evt);
            }
        });
        getContentPane().add(btnEst, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 430, 100, 40));

        btnSVolver.setText("Volver");
        btnSVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnSVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 100, 40));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 540, 150));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/41955wide_800x500.jpg"))); // NOI18N
        jLabel2.setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispositivo = 0;
        Pcap pcap=null;
        String ip_interfaz="";
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    return;
            }
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
            }//for
            
            PcapIf device = alldevs.get(dispositivo); // We know we have atleast 1 device
            Iterator<PcapAddr> it1 = device.getAddresses().iterator();
            while(it1.hasNext()){
                PcapAddr dir = it1.next();//dir, familia, mascara,bc
                PcapSockAddr direccion1 =dir.getAddr();
                byte[]d_ip = direccion1.getData(); //esta sera la ip origen
                int familia=direccion1.getFamily();
                int[]ipv4_1 = new int[4];
                if(familia==org.jnetpcap.PcapSockAddr.AF_INET){
                    ipv4_1[0]=((int)d_ip[0]<0)?((int)d_ip[0])+256:(int)d_ip[0];
                    ipv4_1[1]=((int)d_ip[1]<0)?((int)d_ip[1])+256:(int)d_ip[1];
                    ipv4_1[2]=((int)d_ip[2]<0)?((int)d_ip[2])+256:(int)d_ip[2];
                    ipv4_1[3]=((int)d_ip[3]<0)?((int)d_ip[3])+256:(int)d_ip[3];
                    ip_interfaz = ipv4_1[0]+"."+ipv4_1[1]+"."+ipv4_1[2]+"."+ipv4_1[3];
                    String desc = (device.getDescription() != null) ? device.getDescription() : device.getName();
                    jTextArea1.append(" Choosing '"+desc+"' on your behalf");
                    jTextArea1.append(System.getProperty("line.separator"));
                    jTextArea1.append(" IP: "+ip_interfaz+":");
                    jTextArea1.append(System.getProperty("line.separator"));
                }
            }
            MACo = device.getHardwareAddress();

            int snaplen = 64 * 1024;           // Capture all packets, no trucation
            int flags = Pcap.MODE_PROMISCUOUS; // capture all packets
            int timeout = 10 * 1000;           // 10 seconds in millis
            pcap = Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);
            if (pcap == null) {
                    jTextArea1.append("Error while opening device for capture: " + errbuf.toString());
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }//if
                        //F I L T R O//
            PcapBpfProgram filter = new PcapBpfProgram();
            //String expression = " "; // "port 80";
            String expression = filtro; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                jTextArea1.append("Filter error: " + pcap.getErr());
                jTextArea1.append(System.getProperty("line.separator"));
            }//if
            pcap.setFilter(filter);
            File f = new File("");
            //String ofile = "C:\\Users\\Rodrigo-Laptop\\Desktop\\Trama-Captura.pcap";
            String ofile = f.getAbsolutePath()+"\\Trama-Captura.pcap";
            PcapDumper dumper = pcap.dumpOpen(ofile); // output file
            PcapHandler<PcapDumper> dumpHandler = new PcapHandler<PcapDumper>() {
                    public void nextPacket(PcapDumper dumper, long seconds, int useconds, int caplen, int len, ByteBuffer buffer) {
                        
                        dumper.dump(seconds, useconds, caplen, len, buffer);
                    }
            };
            pcap.loop(1, dumpHandler, dumper);
            File file = new File(ofile);
            jTextArea1.append(ofile+" file has "+file.length()+" bytes in it!\n");
            jTextArea1.append(System.getProperty("line.separator"));
            dumper.close(); // Won't be able to delete without explicit close
            
            PcapPacketHandler<String> jpacketHandler;
                jpacketHandler = new PcapPacketHandler<String>() {
                    public void nextPacket(PcapPacket packet, String user) {
                        jTextArea1.append(" Received packet at " +new Date(packet.getCaptureHeader().timestampInMillis())+
                                        " caplen="+packet.getCaptureHeader().caplen()+// Length actually captured
                                        " len="+packet.getCaptureHeader().wirelen()+ // Original length
                                        " "+user                                    // User supplied object
                        );
                        jTextArea1.append(System.getProperty("line.separator"));
                            //Desencapsulado//
                        byte[] MD= new byte[6], MO= new byte[6], TY= new byte[2];
                        jTextArea1.append("\nEncabezado: \n"+ packet.toHexdump());
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC destino: ");
                        int j=0,k=0,l=0;
                        for(int i=0;i<6;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MD[j]=(byte) packet.getUByte(i);
                            j++;
                        }
                        jTextArea1.append(asString(MD));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC origen: ");
                        for(int i=6;i<12;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MO[k]=(byte) packet.getUByte(i);
                            k++;
                        }
                        jTextArea1.append(asString(MO));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" Tipo: ");
                        for(int i=12;i<14;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            TY[l]=(byte) packet.getUByte(i);
                            l++;
                        }
                        jTextArea1.append(asString(TY));
                        jTextArea1.append(System.getProperty("line.separator"));
                        int tipo = (packet.getUByte(12)*256)+packet.getUByte(13);
                        
                        if (tipo < 1500){
                            CIEEE++;
                            jTextArea1.append("\n Trama IEEE802.3 ");
                            jTextArea1.append(System.getProperty("line.separator"));
                            int dsap = packet.getUByte(14)&0x01;
                            String i_g = " ";
                            if(dsap==1){
                                i_g = "Grupal";
                            }else if(dsap==0){
                                i_g = "Individual";
                            }
                            jTextArea1.append("   DSAP: "+" "+i_g);
                            jTextArea1.append(System.getProperty("line.separator"));
                            int ssap = packet.getUByte(15)&0x01;
                            String c_r = " ";
                            if(ssap==1){
                                c_r = "Respuesta";
                            }else if(ssap==0){
                                c_r = "Comando";
                            }else{
                                c_r = "Otro";
                            }
                            jTextArea1.append("   SSAP: "+" Posible "+c_r);
                            jTextArea1.append(System.getProperty("line.separator"));
                            if(tipo<=3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(16) &0x10;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<4; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(16), pot=0;
                                    mr = mr>>4;
                                    for(int i=5; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==16){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else if(cod==1){
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int ts = packet.getUByte(16) &0x30;
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(16), pot=0;
                                        mr = mr>>4;
                                        for(int i=5; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int tu = packet.getUByte(16) &0xEC;
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }else if(tipo>3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(17) &0x01;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<8; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(17), pot=0;
                                    for(int i=1; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==1){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else{
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        int ts = packet.getUByte(16) &0x0C;
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(17), pot=0;
                                        for(int i=1; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==1){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        int tu = packet.getUByte(16) &0xEC;
                                        pf = packet.getUByte(16) &0x10;
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }//tipo>3
                        }//tipo<1500
                        else{
                            switch(tipo){
                                case 2048://IP
                                    CIP ++;
                                    jTextArea1.append("\n Trama IP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Ip4 ip = new Ip4();
                                    if(packet.hasHeader(ip)){
                                        jTextArea1.append(" Version: "+ip.version());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IHL: "+ip.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Serv. Dif: "+ip.tos());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Longitud: "+ip.length());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Id: "+ip.id());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" X: "+ip.flags_DF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Y: "+ip.flags_MF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Offset: "+ip.offset());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" TTL: "+ip.ttl());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Protocolo: "+ip.type());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Checksum: "+ip.checksum());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int[] ips = new int[4];
                                        byte[] src = ip.source();
                                        for(int i=0;i<4;i++){
                                            ips[i]=(int)src[i];
                                        }
                                        int protocolo = ip.type();
                                        switch(protocolo){
                                            case 6://TCP
                                                CPTCP++;
                                                jTextArea1.append("\n Protocolo TCP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Tcp tcp = new Tcp();
                                                if(packet.hasHeader(tcp)){
                                                    jTextArea1.append("Puerto Origen :" + tcp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + tcp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Numero de secuencia :" + tcp.seq());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Acuse :" + tcp.ack());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("IHL :" + tcp.hlen());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("0000" );
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera CWR :" + tcp.flags_CWR());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ECE :" + tcp.flags_ECE());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera URG :" + tcp.flags_URG());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ACK :" + tcp.flags_ACK());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera PSH :" + tcp.flags_PSH());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera RST :" + tcp.flags_RST());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera SYN :" + tcp.flags_SYN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera FIN :" + tcp.flags_FIN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Ventana :" + tcp.window());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum :" + tcp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Urgent Pointer :" + tcp.urgent());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(tcp)
                                                break;
                                            case 17://UDP
                                                CPUDP ++;
                                                jTextArea1.append("\n Protocolo UDP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Udp udp = new Udp();
                                                if(packet.hasHeader(udp)){
                                                    jTextArea1.append("Puerto Origen :" + udp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + udp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Longitud : " + udp.length());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum : " + udp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(udp)
                                                break;
                                            case 1://ICMP
                                                CPICMP ++;
                                                jTextArea1.append("\n Protocolo ICMP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Icmp icmp = new Icmp();
                                                if(packet.hasHeader(icmp)){
                                                    jTextArea1.append(" Tipo: "+icmp.type());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Codigo: "+icmp.code());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Checksum: "+icmp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(icmp)
                                                break;
                                        }//switch(protocolo)
                                    }//packet.hasHeader(ip)
                                    break;
                                case 2054://ARP o RARP
                                    CARP ++ ;
                                    jTextArea1.append("\n Trama ARP o RARP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Arp arp = new Arp();
                                    if(packet.hasHeader(arp)){
                                        jTextArea1.append(" Tipo HW : "+ arp.hardwareType() + " - " + arp.hardwareTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Tipo Protocolo : "+ arp.protocolType() + " - " + arp.protocolTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" HLEN : "+ arp.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" PLEN : "+ arp.plen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Operacion : "+ arp.operation() + " - " + arp.operationDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac sender : "+ arp.sha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP sender : "+ arp.spa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac target : "+ arp.tha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP target : "+ arp.tpa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }//packet.hasHeader(arp)
                                    break;
                                default:
                                    jTextArea1.append("\n Something went wrong! ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    jTextArea1.append(" There isn't protocol analysis. \n");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    break;
                            }//switch(tipo)
                        }//else tipo
                    }//nextPacket
                };//jpacketHandler
            pcap.loop(trama, jpacketHandler, "jNetPcap rocks!");
            
            /*String ofile = "C:\\Users\\Rodrigo-Laptop\\Desktop\\Trama-Captura.pcap";
            String ofile = "Trama-Captura.pcap";
            PcapDumper dumper = pcap.dumpOpen(ofile); // output file
            PcapHandler<PcapDumper> dumpHandler = new PcapHandler<PcapDumper>() {
                    public void nextPacket(PcapDumper dumper, long seconds, int useconds, int caplen, int len, ByteBuffer buffer) {
                        
                        dumper.dump(seconds, useconds, caplen, len, buffer);
                    }
            };
            pcap.loop(1, dumpHandler, dumper);
            File file = new File(ofile);
            System.out.printf("%s file has %d bytes in it!\n", ofile, file.length());
            dumper.close(); // Won't be able to delete without explicit close*/
            
            pcap.close();
            /*if (file.exists()) {
                file.delete(); // Cleanup
            }*/
        }catch(IOException e){e.printStackTrace();}
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        btnEst.setVisible(true);
        jTextArea2.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispositivo = 1;
        Pcap pcap=null;
        String ip_interfaz="";
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    return;
            }
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
            }//for
            
            PcapIf device = alldevs.get(dispositivo); // We know we have atleast 1 device
            Iterator<PcapAddr> it1 = device.getAddresses().iterator();
            while(it1.hasNext()){
                PcapAddr dir = it1.next();//dir, familia, mascara,bc
                PcapSockAddr direccion1 =dir.getAddr();
                byte[]d_ip = direccion1.getData(); //esta sera la ip origen
                int familia=direccion1.getFamily();
                int[]ipv4_1 = new int[4];
                if(familia==org.jnetpcap.PcapSockAddr.AF_INET){
                    ipv4_1[0]=((int)d_ip[0]<0)?((int)d_ip[0])+256:(int)d_ip[0];
                    ipv4_1[1]=((int)d_ip[1]<0)?((int)d_ip[1])+256:(int)d_ip[1];
                    ipv4_1[2]=((int)d_ip[2]<0)?((int)d_ip[2])+256:(int)d_ip[2];
                    ipv4_1[3]=((int)d_ip[3]<0)?((int)d_ip[3])+256:(int)d_ip[3];
                    ip_interfaz = ipv4_1[0]+"."+ipv4_1[1]+"."+ipv4_1[2]+"."+ipv4_1[3];
                    String desc = (device.getDescription() != null) ? device.getDescription() : device.getName();
                    jTextArea1.append(" Choosing '"+desc+"' on your behalf");
                    jTextArea1.append(System.getProperty("line.separator"));
                    jTextArea1.append(" IP: "+ip_interfaz+":");
                    jTextArea1.append(System.getProperty("line.separator"));
                }
            }
            MACo = device.getHardwareAddress();

            int snaplen = 64 * 1024;           // Capture all packets, no trucation
            int flags = Pcap.MODE_PROMISCUOUS; // capture all packets
            int timeout = 10 * 1000;           // 10 seconds in millis
            pcap = Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);
            if (pcap == null) {
                    jTextArea1.append("Error while opening device for capture: " + errbuf.toString());
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }//if
                        //F I L T R O//
            PcapBpfProgram filter = new PcapBpfProgram();
            //String expression = " "; // "port 80";
            String expression = filtro; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                jTextArea1.append("Filter error: " + pcap.getErr());
                jTextArea1.append(System.getProperty("line.separator"));
            }//if
            pcap.setFilter(filter);
            PcapPacketHandler<String> jpacketHandler;
                jpacketHandler = new PcapPacketHandler<String>() {
                    public void nextPacket(PcapPacket packet, String user) {
                        jTextArea1.append(" Received packet at " +new Date(packet.getCaptureHeader().timestampInMillis())+
                                        " caplen="+packet.getCaptureHeader().caplen()+// Length actually captured
                                        " len="+packet.getCaptureHeader().wirelen()+ // Original length
                                        " "+user                                    // User supplied object
                        );
                        jTextArea1.append(System.getProperty("line.separator"));
                            //Desencapsulado//
                        byte[] MD= new byte[6], MO= new byte[6], TY= new byte[2];
                        jTextArea1.append("\nEncabezado: \n"+ packet.toHexdump());
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC destino: ");
                        int j=0,k=0,l=0;
                        for(int i=0;i<6;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MD[j]=(byte) packet.getUByte(i);
                            j++;
                        }
                        jTextArea1.append(asString(MD));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC origen: ");
                        for(int i=6;i<12;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MO[k]=(byte) packet.getUByte(i);
                            k++;
                        }
                        jTextArea1.append(asString(MO));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" Tipo: ");
                        for(int i=12;i<14;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            TY[l]=(byte) packet.getUByte(i);
                            l++;
                        }
                        jTextArea1.append(asString(TY));
                        jTextArea1.append(System.getProperty("line.separator"));
                        int tipo = (packet.getUByte(12)*256)+packet.getUByte(13);
                        
                        if (tipo < 1500){
                            CIEEE++;
                            jTextArea1.append("\n Trama IEEE802.3 ");
                            jTextArea1.append(System.getProperty("line.separator"));
                            int dsap = packet.getUByte(14)&0x01;
                            String i_g = " ";
                            if(dsap==1){
                                i_g = "Grupal";
                            }else if(dsap==0){
                                i_g = "Individual";
                            }
                            jTextArea1.append("   DSAP: "+" "+i_g);
                            jTextArea1.append(System.getProperty("line.separator"));
                            int ssap = packet.getUByte(15)&0x01;
                            String c_r = " ";
                            if(ssap==1){
                                c_r = "Respuesta";
                            }else if(ssap==0){
                                c_r = "Comando";
                            }else{
                                c_r = "Otro";
                            }
                            jTextArea1.append("   SSAP: "+" Posible "+c_r);
                            jTextArea1.append(System.getProperty("line.separator"));
                            if(tipo<=3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(16) &0x10;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<4; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(16), pot=0;
                                    mr = mr>>4;
                                    for(int i=5; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==16){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else if(cod==1){
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int ts = packet.getUByte(16) &0x30;
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(16), pot=0;
                                        mr = mr>>4;
                                        for(int i=5; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int tu = packet.getUByte(16) &0xEC;
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }else if(tipo>3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(17) &0x01;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<8; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(17), pot=0;
                                    for(int i=1; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==1){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else{
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        int ts = packet.getUByte(16) &0x0C;
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(17), pot=0;
                                        for(int i=1; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==1){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        int tu = packet.getUByte(16) &0xEC;
                                        pf = packet.getUByte(16) &0x10;
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }//tipo>3
                        }//tipo<1500
                        else{
                            switch(tipo){
                                case 2048://IP
                                    CIP ++;
                                    jTextArea1.append("\n Trama IP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Ip4 ip = new Ip4();
                                    if(packet.hasHeader(ip)){
                                        jTextArea1.append(" Version: "+ip.version());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IHL: "+ip.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Serv. Dif: "+ip.tos());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Longitud: "+ip.length());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Id: "+ip.id());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" X: "+ip.flags_DF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Y: "+ip.flags_MF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Offset: "+ip.offset());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" TTL: "+ip.ttl());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Protocolo: "+ip.type());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Checksum: "+ip.checksum());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int[] ips = new int[4];
                                        byte[] src = ip.source();
                                        for(int i=0;i<4;i++){
                                            ips[i]=(int)src[i];
                                        }
                                        int protocolo = ip.type();
                                        switch(protocolo){
                                            case 6://TCP
                                                CPTCP++;
                                                jTextArea1.append("\n Protocolo TCP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Tcp tcp = new Tcp();
                                                if(packet.hasHeader(tcp)){
                                                    jTextArea1.append("Puerto Origen :" + tcp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + tcp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Numero de secuencia :" + tcp.seq());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Acuse :" + tcp.ack());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("IHL :" + tcp.hlen());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("0000" );
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera CWR :" + tcp.flags_CWR());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ECE :" + tcp.flags_ECE());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera URG :" + tcp.flags_URG());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ACK :" + tcp.flags_ACK());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera PSH :" + tcp.flags_PSH());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera RST :" + tcp.flags_RST());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera SYN :" + tcp.flags_SYN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera FIN :" + tcp.flags_FIN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Ventana :" + tcp.window());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum :" + tcp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Urgent Pointer :" + tcp.urgent());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(tcp)
                                                break;
                                            case 17://UDP
                                                CPUDP ++;
                                                jTextArea1.append("\n Protocolo UDP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Udp udp = new Udp();
                                                if(packet.hasHeader(udp)){
                                                    jTextArea1.append("Puerto Origen :" + udp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + udp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Longitud : " + udp.length());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum : " + udp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(udp)
                                                break;
                                            case 1://ICMP
                                                CPICMP ++;
                                                jTextArea1.append("\n Protocolo ICMP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Icmp icmp = new Icmp();
                                                if(packet.hasHeader(icmp)){
                                                    jTextArea1.append(" Tipo: "+icmp.type());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Codigo: "+icmp.code());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Checksum: "+icmp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(icmp)
                                                break;
                                        }//switch(protocolo)
                                    }//packet.hasHeader(ip)
                                    break;
                                case 2054://ARP o RARP
                                    CARP ++ ;
                                    jTextArea1.append("\n Trama ARP o RARP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Arp arp = new Arp();
                                    if(packet.hasHeader(arp)){
                                        jTextArea1.append(" Tipo HW : "+ arp.hardwareType() + " - " + arp.hardwareTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Tipo Protocolo : "+ arp.protocolType() + " - " + arp.protocolTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" HLEN : "+ arp.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" PLEN : "+ arp.plen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Operacion : "+ arp.operation() + " - " + arp.operationDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac sender : "+ arp.sha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP sender : "+ arp.spa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac target : "+ arp.tha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP target : "+ arp.tpa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }//packet.hasHeader(arp)
                                    break;
                                default:
                                    jTextArea1.append("\n Something went wrong! ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    jTextArea1.append(" There isn't protocol analysis. \n");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    break;
                            }//switch(tipo)
                        }//else tipo
                    }//nextPacket
                };//jpacketHandler
            pcap.loop(trama, jpacketHandler, "jNetPcap rocks!");
            pcap.close();
        }catch(IOException e){e.printStackTrace();}
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        btnEst.setVisible(true);
        jTextArea2.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispositivo = 2;
        Pcap pcap=null;
        String ip_interfaz="";
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    return;
            }
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
            }//for
            
            PcapIf device = alldevs.get(dispositivo); // We know we have atleast 1 device
            Iterator<PcapAddr> it1 = device.getAddresses().iterator();
            while(it1.hasNext()){
                PcapAddr dir = it1.next();//dir, familia, mascara,bc
                PcapSockAddr direccion1 =dir.getAddr();
                byte[]d_ip = direccion1.getData(); //esta sera la ip origen
                int familia=direccion1.getFamily();
                int[]ipv4_1 = new int[4];
                if(familia==org.jnetpcap.PcapSockAddr.AF_INET){
                    ipv4_1[0]=((int)d_ip[0]<0)?((int)d_ip[0])+256:(int)d_ip[0];
                    ipv4_1[1]=((int)d_ip[1]<0)?((int)d_ip[1])+256:(int)d_ip[1];
                    ipv4_1[2]=((int)d_ip[2]<0)?((int)d_ip[2])+256:(int)d_ip[2];
                    ipv4_1[3]=((int)d_ip[3]<0)?((int)d_ip[3])+256:(int)d_ip[3];
                    ip_interfaz = ipv4_1[0]+"."+ipv4_1[1]+"."+ipv4_1[2]+"."+ipv4_1[3];
                    String desc = (device.getDescription() != null) ? device.getDescription() : device.getName();
                    jTextArea1.append(" Choosing '"+desc+"' on your behalf");
                    jTextArea1.append(System.getProperty("line.separator"));
                    jTextArea1.append(" IP: "+ip_interfaz+":");
                    jTextArea1.append(System.getProperty("line.separator"));
                }
            }
            MACo = device.getHardwareAddress();

            int snaplen = 64 * 1024;           // Capture all packets, no trucation
            int flags = Pcap.MODE_PROMISCUOUS; // capture all packets
            int timeout = 10 * 1000;           // 10 seconds in millis
            pcap = Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);
            if (pcap == null) {
                    jTextArea1.append("Error while opening device for capture: " + errbuf.toString());
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }//if
                        //F I L T R O//
            PcapBpfProgram filter = new PcapBpfProgram();
            //String expression = " "; // "port 80";
            String expression = filtro; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                jTextArea1.append("Filter error: " + pcap.getErr());
                jTextArea1.append(System.getProperty("line.separator"));
            }//if
            pcap.setFilter(filter);
            PcapPacketHandler<String> jpacketHandler;
                jpacketHandler = new PcapPacketHandler<String>() {
                    public void nextPacket(PcapPacket packet, String user) {
                        jTextArea1.append(" Received packet at " +new Date(packet.getCaptureHeader().timestampInMillis())+
                                        " caplen="+packet.getCaptureHeader().caplen()+// Length actually captured
                                        " len="+packet.getCaptureHeader().wirelen()+ // Original length
                                        " "+user                                    // User supplied object
                        );
                        jTextArea1.append(System.getProperty("line.separator"));
                            //Desencapsulado//
                        byte[] MD= new byte[6], MO= new byte[6], TY= new byte[2];
                        jTextArea1.append("\nEncabezado: \n"+ packet.toHexdump());
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC destino: ");
                        int j=0,k=0,l=0;
                        for(int i=0;i<6;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MD[j]=(byte) packet.getUByte(i);
                            j++;
                        }
                        jTextArea1.append(asString(MD));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC origen: ");
                        for(int i=6;i<12;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MO[k]=(byte) packet.getUByte(i);
                            k++;
                        }
                        jTextArea1.append(asString(MO));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" Tipo: ");
                        for(int i=12;i<14;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            TY[l]=(byte) packet.getUByte(i);
                            l++;
                        }
                        jTextArea1.append(asString(TY));
                        jTextArea1.append(System.getProperty("line.separator"));
                        int tipo = (packet.getUByte(12)*256)+packet.getUByte(13);
                        
                        if (tipo < 1500){
                            CIEEE++;
                            jTextArea1.append("\n Trama IEEE802.3 ");
                            jTextArea1.append(System.getProperty("line.separator"));
                            int dsap = packet.getUByte(14)&0x01;
                            String i_g = " ";
                            if(dsap==1){
                                i_g = "Grupal";
                            }else if(dsap==0){
                                i_g = "Individual";
                            }
                            jTextArea1.append("   DSAP: "+" "+i_g);
                            jTextArea1.append(System.getProperty("line.separator"));
                            int ssap = packet.getUByte(15)&0x01;
                            String c_r = " ";
                            if(ssap==1){
                                c_r = "Respuesta";
                            }else if(ssap==0){
                                c_r = "Comando";
                            }else{
                                c_r = "Otro";
                            }
                            jTextArea1.append("   SSAP: "+" Posible "+c_r);
                            jTextArea1.append(System.getProperty("line.separator"));
                            if(tipo<=3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(16) &0x10;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<4; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(16), pot=0;
                                    mr = mr>>4;
                                    for(int i=5; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==16){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else if(cod==1){
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int ts = packet.getUByte(16) &0x30;
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(16), pot=0;
                                        mr = mr>>4;
                                        for(int i=5; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int tu = packet.getUByte(16) &0xEC;
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }else if(tipo>3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(17) &0x01;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<8; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(17), pot=0;
                                    for(int i=1; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==1){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else{
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        int ts = packet.getUByte(16) &0x0C;
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(17), pot=0;
                                        for(int i=1; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==1){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        int tu = packet.getUByte(16) &0xEC;
                                        pf = packet.getUByte(16) &0x10;
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }//tipo>3
                        }//tipo<1500
                        else{
                            switch(tipo){
                                case 2048://IP
                                    CIP ++;
                                    jTextArea1.append("\n Trama IP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Ip4 ip = new Ip4();
                                    if(packet.hasHeader(ip)){
                                        jTextArea1.append(" Version: "+ip.version());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IHL: "+ip.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Serv. Dif: "+ip.tos());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Longitud: "+ip.length());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Id: "+ip.id());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" X: "+ip.flags_DF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Y: "+ip.flags_MF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Offset: "+ip.offset());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" TTL: "+ip.ttl());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Protocolo: "+ip.type());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Checksum: "+ip.checksum());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int[] ips = new int[4];
                                        byte[] src = ip.source();
                                        for(int i=0;i<4;i++){
                                            ips[i]=(int)src[i];
                                        }
                                        int protocolo = ip.type();
                                        switch(protocolo){
                                            case 6://TCP
                                                CPTCP++;
                                                jTextArea1.append("\n Protocolo TCP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Tcp tcp = new Tcp();
                                                if(packet.hasHeader(tcp)){
                                                    jTextArea1.append("Puerto Origen :" + tcp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + tcp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Numero de secuencia :" + tcp.seq());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Acuse :" + tcp.ack());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("IHL :" + tcp.hlen());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("0000" );
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera CWR :" + tcp.flags_CWR());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ECE :" + tcp.flags_ECE());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera URG :" + tcp.flags_URG());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ACK :" + tcp.flags_ACK());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera PSH :" + tcp.flags_PSH());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera RST :" + tcp.flags_RST());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera SYN :" + tcp.flags_SYN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera FIN :" + tcp.flags_FIN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Ventana :" + tcp.window());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum :" + tcp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Urgent Pointer :" + tcp.urgent());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(tcp)
                                                break;
                                            case 17://UDP
                                                CPUDP ++;
                                                jTextArea1.append("\n Protocolo UDP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Udp udp = new Udp();
                                                if(packet.hasHeader(udp)){
                                                    jTextArea1.append("Puerto Origen :" + udp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + udp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Longitud : " + udp.length());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum : " + udp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(udp)
                                                break;
                                            case 1://ICMP
                                                CPICMP ++;
                                                jTextArea1.append("\n Protocolo ICMP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Icmp icmp = new Icmp();
                                                if(packet.hasHeader(icmp)){
                                                    jTextArea1.append(" Tipo: "+icmp.type());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Codigo: "+icmp.code());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Checksum: "+icmp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(icmp)
                                                break;
                                        }//switch(protocolo)
                                    }//packet.hasHeader(ip)
                                    break;
                                case 2054://ARP o RARP
                                    CARP ++ ;
                                    jTextArea1.append("\n Trama ARP o RARP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Arp arp = new Arp();
                                    if(packet.hasHeader(arp)){
                                        jTextArea1.append(" Tipo HW : "+ arp.hardwareType() + " - " + arp.hardwareTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Tipo Protocolo : "+ arp.protocolType() + " - " + arp.protocolTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" HLEN : "+ arp.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" PLEN : "+ arp.plen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Operacion : "+ arp.operation() + " - " + arp.operationDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac sender : "+ arp.sha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP sender : "+ arp.spa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac target : "+ arp.tha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP target : "+ arp.tpa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }//packet.hasHeader(arp)
                                    break;
                                default:
                                    jTextArea1.append("\n Something went wrong! ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    jTextArea1.append(" There isn't protocol analysis. \n");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    break;
                            }//switch(tipo)
                        }//else tipo
                    }//nextPacket
                };//jpacketHandler
            pcap.loop(trama, jpacketHandler, "jNetPcap rocks!");
            pcap.close();
        }catch(IOException e){e.printStackTrace();}
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        btnEst.setVisible(true);
        jTextArea2.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispositivo = 3;
        Pcap pcap=null;
        String ip_interfaz="";
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    return;
            }
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
            }//for
            
            PcapIf device = alldevs.get(dispositivo); // We know we have atleast 1 device
            Iterator<PcapAddr> it1 = device.getAddresses().iterator();
            while(it1.hasNext()){
                PcapAddr dir = it1.next();//dir, familia, mascara,bc
                PcapSockAddr direccion1 =dir.getAddr();
                byte[]d_ip = direccion1.getData(); //esta sera la ip origen
                int familia=direccion1.getFamily();
                int[]ipv4_1 = new int[4];
                if(familia==org.jnetpcap.PcapSockAddr.AF_INET){
                    ipv4_1[0]=((int)d_ip[0]<0)?((int)d_ip[0])+256:(int)d_ip[0];
                    ipv4_1[1]=((int)d_ip[1]<0)?((int)d_ip[1])+256:(int)d_ip[1];
                    ipv4_1[2]=((int)d_ip[2]<0)?((int)d_ip[2])+256:(int)d_ip[2];
                    ipv4_1[3]=((int)d_ip[3]<0)?((int)d_ip[3])+256:(int)d_ip[3];
                    ip_interfaz = ipv4_1[0]+"."+ipv4_1[1]+"."+ipv4_1[2]+"."+ipv4_1[3];
                    String desc = (device.getDescription() != null) ? device.getDescription() : device.getName();
                    jTextArea1.append(" Choosing '"+desc+"' on your behalf");
                    jTextArea1.append(System.getProperty("line.separator"));
                    jTextArea1.append(" IP: "+ip_interfaz+":");
                    jTextArea1.append(System.getProperty("line.separator"));
                }
            }
            MACo = device.getHardwareAddress();

            int snaplen = 64 * 1024;           // Capture all packets, no trucation
            int flags = Pcap.MODE_PROMISCUOUS; // capture all packets
            int timeout = 10 * 1000;           // 10 seconds in millis
            pcap = Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);
            if (pcap == null) {
                    jTextArea1.append("Error while opening device for capture: " + errbuf.toString());
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }//if
                        //F I L T R O//
            PcapBpfProgram filter = new PcapBpfProgram();
            //String expression = " "; // "port 80";
            String expression = filtro; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                jTextArea1.append("Filter error: " + pcap.getErr());
                jTextArea1.append(System.getProperty("line.separator"));
            }//if
            pcap.setFilter(filter);
            PcapPacketHandler<String> jpacketHandler;
                jpacketHandler = new PcapPacketHandler<String>() {
                    public void nextPacket(PcapPacket packet, String user) {
                        jTextArea1.append(" Received packet at " +new Date(packet.getCaptureHeader().timestampInMillis())+
                                        " caplen="+packet.getCaptureHeader().caplen()+// Length actually captured
                                        " len="+packet.getCaptureHeader().wirelen()+ // Original length
                                        " "+user                                    // User supplied object
                        );
                        jTextArea1.append(System.getProperty("line.separator"));
                            //Desencapsulado//
                        byte[] MD= new byte[6], MO= new byte[6], TY= new byte[2];
                        jTextArea1.append("\nEncabezado: \n"+ packet.toHexdump());
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC destino: ");
                        int j=0,k=0,l=0;
                        for(int i=0;i<6;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MD[j]=(byte) packet.getUByte(i);
                            j++;
                        }
                        jTextArea1.append(asString(MD));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC origen: ");
                        for(int i=6;i<12;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MO[k]=(byte) packet.getUByte(i);
                            k++;
                        }
                        jTextArea1.append(asString(MO));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" Tipo: ");
                        for(int i=12;i<14;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            TY[l]=(byte) packet.getUByte(i);
                            l++;
                        }
                        jTextArea1.append(asString(TY));
                        jTextArea1.append(System.getProperty("line.separator"));
                        int tipo = (packet.getUByte(12)*256)+packet.getUByte(13);
                        
                        if (tipo < 1500){
                            CIEEE++;
                            jTextArea1.append("\n Trama IEEE802.3 ");
                            jTextArea1.append(System.getProperty("line.separator"));
                            int dsap = packet.getUByte(14)&0x01;
                            String i_g = " ";
                            if(dsap==1){
                                i_g = "Grupal";
                            }else if(dsap==0){
                                i_g = "Individual";
                            }
                            jTextArea1.append("   DSAP: "+" "+i_g);
                            jTextArea1.append(System.getProperty("line.separator"));
                            int ssap = packet.getUByte(15)&0x01;
                            String c_r = " ";
                            if(ssap==1){
                                c_r = "Respuesta";
                            }else if(ssap==0){
                                c_r = "Comando";
                            }else{
                                c_r = "Otro";
                            }
                            jTextArea1.append("   SSAP: "+" Posible "+c_r);
                            jTextArea1.append(System.getProperty("line.separator"));
                            if(tipo<=3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(16) &0x10;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<4; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(16), pot=0;
                                    mr = mr>>4;
                                    for(int i=5; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==16){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else if(cod==1){
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int ts = packet.getUByte(16) &0x30;
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(16), pot=0;
                                        mr = mr>>4;
                                        for(int i=5; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int tu = packet.getUByte(16) &0xEC;
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }else if(tipo>3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(17) &0x01;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<8; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(17), pot=0;
                                    for(int i=1; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==1){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else{
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        int ts = packet.getUByte(16) &0x0C;
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(17), pot=0;
                                        for(int i=1; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==1){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        int tu = packet.getUByte(16) &0xEC;
                                        pf = packet.getUByte(16) &0x10;
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }//tipo>3
                        }//tipo<1500
                        else{
                            switch(tipo){
                                case 2048://IP
                                    CIP ++;
                                    jTextArea1.append("\n Trama IP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Ip4 ip = new Ip4();
                                    if(packet.hasHeader(ip)){
                                        jTextArea1.append(" Version: "+ip.version());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IHL: "+ip.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Serv. Dif: "+ip.tos());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Longitud: "+ip.length());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Id: "+ip.id());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" X: "+ip.flags_DF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Y: "+ip.flags_MF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Offset: "+ip.offset());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" TTL: "+ip.ttl());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Protocolo: "+ip.type());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Checksum: "+ip.checksum());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int[] ips = new int[4];
                                        byte[] src = ip.source();
                                        for(int i=0;i<4;i++){
                                            ips[i]=(int)src[i];
                                        }
                                        int protocolo = ip.type();
                                        switch(protocolo){
                                            case 6://TCP
                                                CPTCP++;
                                                jTextArea1.append("\n Protocolo TCP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Tcp tcp = new Tcp();
                                                if(packet.hasHeader(tcp)){
                                                    jTextArea1.append("Puerto Origen :" + tcp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + tcp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Numero de secuencia :" + tcp.seq());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Acuse :" + tcp.ack());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("IHL :" + tcp.hlen());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("0000" );
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera CWR :" + tcp.flags_CWR());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ECE :" + tcp.flags_ECE());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera URG :" + tcp.flags_URG());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ACK :" + tcp.flags_ACK());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera PSH :" + tcp.flags_PSH());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera RST :" + tcp.flags_RST());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera SYN :" + tcp.flags_SYN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera FIN :" + tcp.flags_FIN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Ventana :" + tcp.window());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum :" + tcp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Urgent Pointer :" + tcp.urgent());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(tcp)
                                                break;
                                            case 17://UDP
                                                CPUDP ++;
                                                jTextArea1.append("\n Protocolo UDP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Udp udp = new Udp();
                                                if(packet.hasHeader(udp)){
                                                    jTextArea1.append("Puerto Origen :" + udp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + udp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Longitud : " + udp.length());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum : " + udp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(udp)
                                                break;
                                            case 1://ICMP
                                                CPICMP ++;
                                                jTextArea1.append("\n Protocolo ICMP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Icmp icmp = new Icmp();
                                                if(packet.hasHeader(icmp)){
                                                    jTextArea1.append(" Tipo: "+icmp.type());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Codigo: "+icmp.code());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Checksum: "+icmp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(icmp)
                                                break;
                                        }//switch(protocolo)
                                    }//packet.hasHeader(ip)
                                    break;
                                case 2054://ARP o RARP
                                    CARP ++ ;
                                    jTextArea1.append("\n Trama ARP o RARP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Arp arp = new Arp();
                                    if(packet.hasHeader(arp)){
                                        jTextArea1.append(" Tipo HW : "+ arp.hardwareType() + " - " + arp.hardwareTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Tipo Protocolo : "+ arp.protocolType() + " - " + arp.protocolTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" HLEN : "+ arp.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" PLEN : "+ arp.plen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Operacion : "+ arp.operation() + " - " + arp.operationDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac sender : "+ arp.sha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP sender : "+ arp.spa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac target : "+ arp.tha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP target : "+ arp.tpa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }//packet.hasHeader(arp)
                                    break;
                                default:
                                    jTextArea1.append("\n Something went wrong! ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    jTextArea1.append(" There isn't protocol analysis. \n");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    break;
                            }//switch(tipo)
                        }//else tipo
                    }//nextPacket
                };//jpacketHandler
            pcap.loop(trama, jpacketHandler, "jNetPcap rocks!");
            pcap.close();
        }catch(IOException e){e.printStackTrace();}
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        btnEst.setVisible(true);
        jTextArea2.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispositivo = 4;
        Pcap pcap=null;
        String ip_interfaz="";
        byte[] MACo = null;
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs
            StringBuilder errbuf = new StringBuilder(); // For any error msgs
            int r = Pcap.findAllDevs(alldevs, errbuf);
            if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
                    String err = ("Can't read list of devices, error is "+errbuf.toString());
                    return;
            }
            int i = 0;
            for (PcapIf device : alldevs) {
                String description =
                    (device.getDescription() != null) ? device.getDescription()
                        : "No description available";
                final byte[] mac = device.getHardwareAddress();
                String dir_mac = (mac==null)?"No tiene direccion MAC":asString(mac);
                String num = Integer.toString(i++);
            }//for
            
            PcapIf device = alldevs.get(dispositivo); // We know we have atleast 1 device
            Iterator<PcapAddr> it1 = device.getAddresses().iterator();
            while(it1.hasNext()){
                PcapAddr dir = it1.next();//dir, familia, mascara,bc
                PcapSockAddr direccion1 =dir.getAddr();
                byte[]d_ip = direccion1.getData(); //esta sera la ip origen
                int familia=direccion1.getFamily();
                int[]ipv4_1 = new int[4];
                if(familia==org.jnetpcap.PcapSockAddr.AF_INET){
                    ipv4_1[0]=((int)d_ip[0]<0)?((int)d_ip[0])+256:(int)d_ip[0];
                    ipv4_1[1]=((int)d_ip[1]<0)?((int)d_ip[1])+256:(int)d_ip[1];
                    ipv4_1[2]=((int)d_ip[2]<0)?((int)d_ip[2])+256:(int)d_ip[2];
                    ipv4_1[3]=((int)d_ip[3]<0)?((int)d_ip[3])+256:(int)d_ip[3];
                    ip_interfaz = ipv4_1[0]+"."+ipv4_1[1]+"."+ipv4_1[2]+"."+ipv4_1[3];
                    String desc = (device.getDescription() != null) ? device.getDescription() : device.getName();
                    jTextArea1.append(" Choosing '"+desc+"' on your behalf");
                    jTextArea1.append(System.getProperty("line.separator"));
                    jTextArea1.append(" IP: "+ip_interfaz+":");
                    jTextArea1.append(System.getProperty("line.separator"));
                }
            }
            MACo = device.getHardwareAddress();

            int snaplen = 64 * 1024;           // Capture all packets, no trucation
            int flags = Pcap.MODE_PROMISCUOUS; // capture all packets
            int timeout = 10 * 1000;           // 10 seconds in millis
            pcap = Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);
            if (pcap == null) {
                    jTextArea1.append("Error while opening device for capture: " + errbuf.toString());
                    jTextArea1.append(System.getProperty("line.separator"));
                    return;
            }//if
                        //F I L T R O//
            PcapBpfProgram filter = new PcapBpfProgram();
            //String expression = " "; // "port 80";
            String expression = filtro; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                jTextArea1.append("Filter error: " + pcap.getErr());
                jTextArea1.append(System.getProperty("line.separator"));
            }//if
            pcap.setFilter(filter);
            PcapPacketHandler<String> jpacketHandler;
                jpacketHandler = new PcapPacketHandler<String>() {
                    public void nextPacket(PcapPacket packet, String user) {
                        jTextArea1.append(" Received packet at " +new Date(packet.getCaptureHeader().timestampInMillis())+
                                        " caplen="+packet.getCaptureHeader().caplen()+// Length actually captured
                                        " len="+packet.getCaptureHeader().wirelen()+ // Original length
                                        " "+user                                    // User supplied object
                        );
                        jTextArea1.append(System.getProperty("line.separator"));
                            //Desencapsulado//
                        byte[] MD= new byte[6], MO= new byte[6], TY= new byte[2];
                        jTextArea1.append("\nEncabezado: \n"+ packet.toHexdump());
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC destino: ");
                        int j=0,k=0,l=0;
                        for(int i=0;i<6;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MD[j]=(byte) packet.getUByte(i);
                            j++;
                        }
                        jTextArea1.append(asString(MD));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" MAC origen: ");
                        for(int i=6;i<12;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            MO[k]=(byte) packet.getUByte(i);
                            k++;
                        }
                        jTextArea1.append(asString(MO));
                        jTextArea1.append(System.getProperty("line.separator"));
                        jTextArea1.append(" Tipo: ");
                        for(int i=12;i<14;i++){
                            System.out.printf(" %02X",packet.getUByte(i));
                            TY[l]=(byte) packet.getUByte(i);
                            l++;
                        }
                        jTextArea1.append(asString(TY));
                        jTextArea1.append(System.getProperty("line.separator"));
                        int tipo = (packet.getUByte(12)*256)+packet.getUByte(13);
                        
                        if (tipo < 1500){
                            CIEEE++;
                            jTextArea1.append("\n Trama IEEE802.3 ");
                            jTextArea1.append(System.getProperty("line.separator"));
                            int dsap = packet.getUByte(14)&0x01;
                            String i_g = " ";
                            if(dsap==1){
                                i_g = "Grupal";
                            }else if(dsap==0){
                                i_g = "Individual";
                            }
                            jTextArea1.append("   DSAP: "+" "+i_g);
                            jTextArea1.append(System.getProperty("line.separator"));
                            int ssap = packet.getUByte(15)&0x01;
                            String c_r = " ";
                            if(ssap==1){
                                c_r = "Respuesta";
                            }else if(ssap==0){
                                c_r = "Comando";
                            }else{
                                c_r = "Otro";
                            }
                            jTextArea1.append("   SSAP: "+" Posible "+c_r);
                            jTextArea1.append(System.getProperty("line.separator"));
                            if(tipo<=3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(16) &0x10;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<4; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(16), pot=0;
                                    mr = mr>>4;
                                    for(int i=5; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==16){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else if(cod==1){
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int ts = packet.getUByte(16) &0x30;
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(16), pot=0;
                                        mr = mr>>4;
                                        for(int i=5; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int tu = packet.getUByte(16) &0xEC;
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }else if(tipo>3){
                                int cod = packet.getUByte(16) &0x01;
                                int pf = packet.getUByte(17) &0x01;
                                if(cod==0){
                                    jTextArea1.append(" Trama 'i' ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultados=0, ms=packet.getUByte(16), pots=0;
                                    for(int i=1; i<8; i++){
                                        ms = ms>>1;
                                        pots = (int) ((ms&0x01)*(Math.pow(2,i)));
                                        resultados += pots;
                                    }
                                    jTextArea1.append(" SYN = "+resultados);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    int resultado=0, mr=packet.getUByte(17), pot=0;
                                    for(int i=1; i<8; i++){
                                        mr = mr>>1;
                                        pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                        resultado += pot;
                                    }
                                    jTextArea1.append(" ACK = "+resultado);
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    if(pf==0){
                                        jTextArea1.append(" P/F =0  No es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }else if(pf==1){
                                        jTextArea1.append(" P/F =1  Si es "+c_r);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }
                                }else{
                                    int cod1 = packet.getUByte(16) &0x02;
                                    if(cod1==0){
                                        int ts = packet.getUByte(16) &0x0C;
                                        jTextArea1.append(" Trama 's' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(ts){
                                            case 0:
                                                jTextArea1.append(" RR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 8:
                                                jTextArea1.append(" REJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 4:
                                                jTextArea1.append(" RNR ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" SREJ ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        int resultado=0, mr=packet.getUByte(17), pot=0;
                                        for(int i=1; i<8; i++){
                                            mr = mr>>1;
                                            pot = (int) ((mr&0x01)*(Math.pow(2,i)));
                                            resultado += pot;
                                        }
                                        jTextArea1.append(" ACK = "+resultado);
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==1){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }else if (cod1==2){
                                        int tu = packet.getUByte(16) &0xEC;
                                        pf = packet.getUByte(16) &0x10;
                                        jTextArea1.append(" Trama 'u' ");
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        switch(tu){
                                            case 128:
                                                jTextArea1.append(" Orden: SNRM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 204:
                                                jTextArea1.append(" Orden: SNRME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 12:
                                                jTextArea1.append(" Orden: SARM   Respuesta: DM");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 76:
                                                jTextArea1.append(" Orden: SARME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 44:
                                                jTextArea1.append(" Orden: SABM   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 108:
                                                jTextArea1.append(" Orden: SABME   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 0:
                                                jTextArea1.append(" Orden: UI   Respuesta: UI");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 96:
                                                jTextArea1.append(" Orden: ---   Respuesta: UA");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 64:
                                                jTextArea1.append(" Orden: DISC   Respuesta: RD");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 140:
                                                jTextArea1.append(" Orden: RSET   Respuesta: --");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 131:
                                                jTextArea1.append(" Orden: ---   Respuesta: FRMR");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            case 32:
                                                jTextArea1.append(" Orden: UP   Respuesta:");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                            default:
                                                jTextArea1.append(" Error");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                break;
                                        }
                                        if(pf==0){
                                            jTextArea1.append(" P/F =0  No es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }else if(pf==16){
                                            jTextArea1.append(" P/F =1  Si es "+c_r);
                                            jTextArea1.append(System.getProperty("line.separator"));
                                        }
                                    }
                                }
                            }//tipo>3
                        }//tipo<1500
                        else{
                            switch(tipo){
                                case 2048://IP
                                    CIP ++;
                                    jTextArea1.append("\n Trama IP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Ip4 ip = new Ip4();
                                    if(packet.hasHeader(ip)){
                                        jTextArea1.append(" Version: "+ip.version());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IHL: "+ip.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Serv. Dif: "+ip.tos());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Longitud: "+ip.length());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Id: "+ip.id());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" X: "+ip.flags_DF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Y: "+ip.flags_MF());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Offset: "+ip.offset());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" TTL: "+ip.ttl());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Protocolo: "+ip.type());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Checksum: "+ip.checksum());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        int[] ips = new int[4];
                                        byte[] src = ip.source();
                                        for(int i=0;i<4;i++){
                                            ips[i]=(int)src[i];
                                        }
                                        int protocolo = ip.type();
                                        switch(protocolo){
                                            case 6://TCP
                                                CPTCP++;
                                                jTextArea1.append("\n Protocolo TCP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Tcp tcp = new Tcp();
                                                if(packet.hasHeader(tcp)){
                                                    jTextArea1.append("Puerto Origen :" + tcp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + tcp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Numero de secuencia :" + tcp.seq());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Acuse :" + tcp.ack());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("IHL :" + tcp.hlen());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("0000" );
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera CWR :" + tcp.flags_CWR());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ECE :" + tcp.flags_ECE());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera URG :" + tcp.flags_URG());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera ACK :" + tcp.flags_ACK());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera PSH :" + tcp.flags_PSH());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera RST :" + tcp.flags_RST());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera SYN :" + tcp.flags_SYN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Bandera FIN :" + tcp.flags_FIN());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Ventana :" + tcp.window());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum :" + tcp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Urgent Pointer :" + tcp.urgent());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(tcp)
                                                break;
                                            case 17://UDP
                                                CPUDP ++;
                                                jTextArea1.append("\n Protocolo UDP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Udp udp = new Udp();
                                                if(packet.hasHeader(udp)){
                                                    jTextArea1.append("Puerto Origen :" + udp.source());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Puerto destino :" + udp.destination());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Longitud : " + udp.length());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append("Checksum : " + udp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(udp)
                                                break;
                                            case 1://ICMP
                                                CPICMP ++;
                                                jTextArea1.append("\n Protocolo ICMP ");
                                                jTextArea1.append(System.getProperty("line.separator"));
                                                Icmp icmp = new Icmp();
                                                if(packet.hasHeader(icmp)){
                                                    jTextArea1.append(" Tipo: "+icmp.type());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Codigo: "+icmp.code());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                    jTextArea1.append(" Checksum: "+icmp.checksum());
                                                    jTextArea1.append(System.getProperty("line.separator"));
                                                }//packet.hasHeader(icmp)
                                                break;
                                        }//switch(protocolo)
                                    }//packet.hasHeader(ip)
                                    break;
                                case 2054://ARP o RARP
                                    CARP ++ ;
                                    jTextArea1.append("\n Trama ARP o RARP ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    Arp arp = new Arp();
                                    if(packet.hasHeader(arp)){
                                        jTextArea1.append(" Tipo HW : "+ arp.hardwareType() + " - " + arp.hardwareTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Tipo Protocolo : "+ arp.protocolType() + " - " + arp.protocolTypeDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" HLEN : "+ arp.hlen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" PLEN : "+ arp.plen());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Operacion : "+ arp.operation() + " - " + arp.operationDescription());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac sender : "+ arp.sha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP sender : "+ arp.spa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" Mac target : "+ arp.tha());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                        jTextArea1.append(" IP target : "+ arp.tpa());
                                        jTextArea1.append(System.getProperty("line.separator"));
                                    }//packet.hasHeader(arp)
                                    break;
                                default:
                                    jTextArea1.append("\n Something went wrong! ");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    jTextArea1.append(" There isn't protocol analysis. \n");
                                    jTextArea1.append(System.getProperty("line.separator"));
                                    break;
                            }//switch(tipo)
                        }//else tipo
                    }//nextPacket
                };//jpacketHandler
            pcap.loop(trama, jpacketHandler, "jNetPcap rocks!");
            pcap.close();
        }catch(IOException e){e.printStackTrace();}
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        btnEst.setVisible(true);
        jTextArea2.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstActionPerformed

        jTextArea2.append("Tramas IEEE : " + CIEEE);
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append("Tramas IP : " + CIP);
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append("Protocolo UDP : " + CPUDP);
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append("Protocolo TCP : " + CPTCP);
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append("Protocolo ICMP : " + CPICMP);
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append(System.getProperty("line.separator"));
        jTextArea2.append("Tramas ARP : " + CARP);
        btnSalir.setVisible(true);
    }//GEN-LAST:event_btnEstActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnSVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSVolverActionPerformed
        Frame inicio = new Frame();
        inicio.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSVolverActionPerformed

    private void btnEportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEportarActionPerformed
        
    }//GEN-LAST:event_btnEportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEportar;
    private javax.swing.JButton btnEst;
    private javax.swing.JButton btnSVolver;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
